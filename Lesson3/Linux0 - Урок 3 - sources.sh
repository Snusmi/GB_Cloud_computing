# Урок 3

############################################################## Разбор ДЗ

### 1. Создать каталоги first и second в домашней директории, а в них — текстовые файлы first.py и second.py, содержащие программы, выводящие на экран числа 1 и 2 соответственно.
mkdir first
mkdir second

echo 'print("1")' > first/first.py
echo 'print("2")' > second/second.py

### 2. Переместите файл second.py в папку first.
mv second/second.py first/

### 3. Удалите папку second.
rm -rf second/

### 4. Переименуйте папку first в first_second.
mv first first_second

### 5. Удалите папку first_second вместе с содержимым.
rm -rf first_second

############################################################## Работа с WinSCP
# https://winscp.net/eng/download.php
•	Отправка файла туда (на сервер)
scp -i geekbrains_aws_key.pem file.txt  ubuntu@3.84.37.212:/home/ubuntu

•	Скачивание себе (с сервера)
scp -i geekbrains_aws_key.pem  ubuntu@3.84.37.212:/home/ubuntu/myfile.txt ~

############################################################## less, more, tail, head
•	глянем справку
more --help

•	выведем текст файла
more mciri_poem.txt

•	выведем по 15 строк, начиная со 2-й главы
more +33 -15 mciri_poem.txt

•	найдем место, где встречается слово «однажды»
less -N -I -p "однажды" mciri_poem.txt

•	выведем первую строку из файла
head 1 mciri_poem.txt

•	вывведем из файла последние 3 строки
tail -3 mciri_poem.txt

############################################################## nano
nano test.txt 
nano ls.txt

•	Запуск с резервной копией
nano -B mciri_poem.txt

•	горячие клавиши:
	Ctrl+k – вырезать строку с курсором
	Ctrl+u – вставить из буфера, в месте курсора
	Ctrl+6 – начать выделение
	Ctrl+Shift+6 – скопировать выделенное
	Ctrl+w – поиск строки
	Ctrl+\ - поиск с заменой
	Ctrk+r – вставка из другого файла в текущее место курсора
	Ctrl+c - Показать позицию курсора
	Ctrl+_ (Ctrl+Shift+-) - Переместить курсор в позицию

############################################################## vim
vimtutor - обучалка
o	Возможно, потребуется установить (обучалку): 
	sudo apt install vim-runtime


# Редактируем файлы с помощью редактора vim
vim test.txt 
vim ls.txt 

•	горячие клавиши (в режиме команд (normal)):
o	:w <Enter> - сохраним файл
o	:q <Enter> - выйдем из редактора
o	dd – вырезает строку
o	5dd – вырезает 5 строк
o	2dw – вырезает 2 слова
o	p – вставить из буфера
o	u – undo
o	3u – undo 3 times
o	2w – на 2 слова вправо
o	10h – на 10 символов влево
o	3j – на 3 строки вниз
o	3k – на 3 строки вверх
o	/строка – ищет строку
o	n – перейти к следующему результату поиска
o	Shift+n – перейти к предыдущему результату поиска

•	режимы vim
o	(Esc) normal: режим команд
o	вставки
	(i) insert: режим вставки
	(a) append: режим вставки
	(R) replace: режим замены
o	 (v) visual: визуальный – для работы с выделеным текстом
o	(:!) режим внешних команд

############################################################## cat
# Просмотр с помощью cat
cat test.txt 

# Создадим новый файл 
man ls > ls.txt

# Объединяем два файла
cat file1 file2
 
# Объединяем три файла
cat file1 file2 file3
 
# Объединяем и сохраняем в файл 
cat file1 file2 file3 > total

############################################################## pipes
# Использование утилиты для подсчёта строк, слов и символов в файле
man wc

# Подсчитываем строки с использованием конвеера |
cat file1 | wc -l

# Подсчитываем строки в трёх файлах 
cat file1 file2 file3 | wc -l
 
# Подсчитываем байты в трёх файлах 
cat file1 file2 file3 | wc -c

# Получаем значения по количеству строк, слов и символов 
cat file1 file2 file3 | wc

# Подсчитываем слова 
cat file1 file2 file3 | wc -w

# Используем шаблон подстановки * 
cat file* | wc 

# Составляем более сложную команду
ls -l | grep txt | wc -l

# Варианты использования шаблонов подстановки 
ls file*
ls file?
touch file33
 
ls file*
ls file?
ls file??
